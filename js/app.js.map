{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menu = require(\"./menu\");\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar effect = undefined,\n    clock = undefined,\n    scene = undefined,\n    camera = undefined,\n    controls = undefined,\n    renderer = undefined,\n    container = null;\n\nfunction init() {\n  clock = new THREE.Clock();\n  container = $('#container');\n\n  // Canvas Size\n  var WIDTH = container.width(),\n      HEIGHT = container.height();\n\n  // Camera Attributes\n  var VIEW_ANGLE = 60,\n      // FOV - How much can the camera see\n  ASPECT = WIDTH / HEIGHT,\n      // Aspect ratio\n  NEAR = 1,\n      // Near plane\n  FAR = 0; // Far plane\n\n  // Setup renderer and append to DOM\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize(WIDTH, HEIGHT);\n  renderer.setClearColor(0x000000, 1);\n  container.append(renderer.domElement);\n\n  // Setup the camera\n  camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\n  camera.position.set(0, 150, 250);\n\n  // Setup the scene\n  scene = new THREE.Scene();\n\n  // Add Camera\n  scene.add(camera);\n\n  // Setup orbital controls\n  controls = new THREE.OrbitControls(camera, container.get(0));\n  controls.target.set(camera.position.x + 0.1, camera.position.y, camera.position.z);\n\n  // Setup 3D Plane\n  var loader = new THREE.TextureLoader();\n  var texture = loader.load('img/grid.jpg', function (object) {\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat = new THREE.Vector2(15, 15);\n    texture.anisotropy = renderer.getMaxAnisotropy();\n  });\n\n  var material = new THREE.MeshPhongMaterial({\n    color: 0xffffff,\n    specular: 0xffffff,\n    shininess: 20,\n    shading: THREE.FlatShading,\n    map: texture\n  });\n  var mesh = new THREE.Mesh(new THREE.PlaneGeometry(5000, 5000), material);\n  mesh.rotation.x = -Math.PI / 2;\n  scene.add(mesh);\n\n  // Add some light to the scene\n  var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n  scene.add(light);\n\n  var menu = new _menu2['default']();\n  menu.start(scene);\n}\n\nfunction update(dt) {\n  camera.updateProjectionMatrix();\n  controls.update(dt);\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction animate(t) {\n  requestAnimationFrame(animate);\n\n  update(clock.getDelta());\n  render(clock.getDelta());\n}\n\nfunction fullscreen() {\n  if (container.requestFullscreen) {\n    container.requestFullscreen();\n  } else if (container.msRequestFullscreen) {\n    container.msRequestFullscreen();\n  } else if (container.mozRequestFullScreen) {\n    container.mozRequestFullScreen();\n  } else if (container.webkitRequestFullscreen) {\n    container.webkitRequestFullscreen();\n  }\n}\n\ninit();\nanimate();\n\n},{\"./menu\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nwindow.textMesh = null;\nwindow.textGeom = null;\n\nvar Menu = (function () {\n  function Menu() {\n    _classCallCheck(this, Menu);\n  }\n\n  _createClass(Menu, [{\n    key: \"start\",\n    value: function start(scene) {\n      var material = new THREE.MeshPhongMaterial({\n        color: 0xFFFFFF\n      });\n      textGeom = new THREE.TextGeometry(\"HI\", {\n        font: \"8bit\"\n      });\n      textMesh = new THREE.Mesh(textGeom, material);\n      textMesh.position.set(-70, 70, 0);\n      textGeom.rotateX(-25 * (Math.PI / 180));\n\n      scene.add(textMesh);\n\n      textGeom.computeBoundingBox();\n      textGeom.textWidth = textGeom.boundingBox.max.x - textGeom.boundingBox.min.x;\n    }\n  }]);\n\n  return Menu;\n})();\n\nexports[\"default\"] = Menu;\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[1,2]);\n"],"file":"app.js","sourceRoot":"/source/"}